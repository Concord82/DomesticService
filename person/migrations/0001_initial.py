# Generated by Django 3.0.2 on 2020-02-03 13:02

from django.db import migrations, models
import person.managers
import person.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Middle Name User')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[person.models.validate_phone], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('address', models.CharField(blank=True, max_length=64, verbose_name='Address')),
                ('birthDay', models.DateField(blank=True, null=True, verbose_name='User BirthDay')),
                ('creationData', models.DateTimeField(auto_now_add=True, verbose_name='Registration Data')),
                ('lastAction', models.DateTimeField(blank=True, null=True, verbose_name='Last Action Data')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('ranks', models.IntegerField(default=0, verbose_name='Clients ratio')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Middle Name User')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[person.models.validate_phone], verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, max_length=64, verbose_name='Address')),
                ('position', models.IntegerField(choices=[(1, 'administrator'), (2, 'master'), (3, 'manager')], default=2, verbose_name='Position in company')),
                ('birthDay', models.DateField(blank=True, null=True, verbose_name='User BirthDay')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('avatar', models.ImageField(default='../static/images/avatar/women.jpg', upload_to='users/', verbose_name='Photo')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', person.managers.UserManager()),
            ],
        ),
    ]
